<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:jpa="http://www.springframework.org/schema/data/jpa" xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/data/jpa
	    https://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/context
		https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		
">

	<jpa:repositories base-package="biblio.repository" />

	<!-- demander scanne les classes qui sont dans  -->
	<context:component-scan base-package="biblio">
		<!-- dans le scanne prendre en compte toutes les classes qui sont dans service OU dao -->
		<context:include-filter type="regex" expression="(service|dao)\..*" />
	</context:component-scan>
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/biblio_app?allowPublicKeyRetrieval=true" />
		<property name="username" value="bibli" />
		<property name="password" value="biblipwd" />
	</bean>


	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="packagesToScan" value="biblio.model" />
		<property name="dataSource" ref="dataSource" />

		<property name="jpaProperties">
			<props>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
			</props>
		</property>

		<property name="persistenceProvider">
			<bean class="org.hibernate.jpa.HibernatePersistenceProvider"></bean>
		</property>

	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean class="org.springframework.orm.jpa.JpaTransactionManager" id="transactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
</beans>